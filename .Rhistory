m <- leaflet() %>%
addTiles() %>%
addEsriTiledMapLayer(
url = "http://gis-treecover.wri.org/arcgis/rest/services/ForestLoss_2000_2012_map/MapServer")
library(leaflet.esri)
install.packages("leaflet.esri")
library(leaflet.esri)
m <- leaflet() %>%
addTiles() %>%
addEsriTiledMapLayer(
url = "http://gis-treecover.wri.org/arcgis/rest/services/ForestLoss_2000_2012_map/MapServer")
m
View(plot)
View(worldmap_plot)
centroids <- read.csv("country_centroids_az8.csv",header=TRUE,stringsAsFactors = FALSE)
View(centroids)
colnames(centroids)
colnames(coord) <- c("region","Long","Lat")
coord <- centroids %>% select(geounit,Longitude,Latitude) %>% distinct()
colnames(coord) <- c("region","Long","Lat")
df <- anti_join(cf_count,coord,by="region")
View(df)
View(coord)
gsub("USA","United States of America", x)
cf_plot <- data.frame(lapply(cf_count, function(x) {
gsub("USA","United States of America", x)
}))
View(cf_plot)
m <- leaflet(cf_plot) %>%
addTiles() %>%
addEsriTiledMapLayer(
url = "http://gis-treecover.wri.org/arcgis/rest/services/ForestLoss_2000_2012_map/MapServer") %>%
addCircles(lng = ~Long, lat = ~Lat, weight = 1,
radius = ~sqrt(n) * 30)
View(cf1)
View(cf_plot)
cf_plot <- left_join(cf_plot,coord)
cf_plot <- left_join(cf_plot,coord,by="region")
View(cf_plot)
cf_plot <- data.frame(lapply(cf_count, function(x) {
gsub("USA","United States of America", x)
}))
cf_plot <- left_join(cf_plot,coord,by="region")
View(cf_plot)
m <- leaflet(cf_plot) %>%
addTiles() %>%
addEsriTiledMapLayer(
url = "http://gis-treecover.wri.org/arcgis/rest/services/ForestLoss_2000_2012_map/MapServer") %>%
addCircles(lng = ~Long, lat = ~Lat, weight = 1,
radius = ~sqrt(n) * 30)
cf_plot$n <- as.numeric(cf_plot$n)
m <- leaflet(cf_plot) %>%
addTiles() %>%
addEsriTiledMapLayer(
url = "http://gis-treecover.wri.org/arcgis/rest/services/ForestLoss_2000_2012_map/MapServer") %>%
addCircles(lng = ~Long, lat = ~Lat, weight = 1,
radius = ~n)
m
url = "http://gis-treecover.wri.org/arcgis/rest/services/ForestLoss_2000_2012_map/MapServer") %>%
addCircles(lng = ~Long, lat = ~Lat, weight = 1,
radius = ~n * 100)
m <- leaflet(cf_plot) %>%
addTiles() %>%
addEsriTiledMapLayer(
url = "http://gis-treecover.wri.org/arcgis/rest/services/ForestLoss_2000_2012_map/MapServer") %>%
addCircles(lng = ~Long, lat = ~Lat, weight = 1,
radius = ~n * 100)
m
url = "http://gis-treecover.wri.org/arcgis/rest/services/ForestLoss_2000_2012_map/MapServer") %>%
addCircles(lng = ~Long, lat = ~Lat, weight = 1,
radius = ~(n * 100), popup = ~n)
m <- leaflet(cf_plot) %>%
addTiles() %>%
addEsriTiledMapLayer(
url = "http://gis-treecover.wri.org/arcgis/rest/services/ForestLoss_2000_2012_map/MapServer") %>%
addCircles(lng = ~Long, lat = ~Lat, weight = 1,
radius = ~(n * 100), popup = ~n)
m
typeof(cf_plot$n)
cf_plot$n
m <- leaflet(cf_plot) %>%
addTiles() %>%
addEsriTiledMapLayer(
url = "http://gis-treecover.wri.org/arcgis/rest/services/ForestLoss_2000_2012_map/MapServer") %>%
addCircles(lng = ~Long, lat = ~Lat, weight = 1,
radius = ~(n * 1000), popup = ~n)
m
m <- leaflet(cf_plot) %>%
addEsriTiledMapLayer(
url = "http://gis-treecover.wri.org/arcgis/rest/services/ForestLoss_2000_2012_map/MapServer") %>%
addCircles(lng = ~Long, lat = ~Lat, weight = 1,
radius = ~(n * 1000), popup = ~n)
m
url = "http://gis-treecover.wri.org/arcgis/rest/services/ForestLoss_2000_2012_map/MapServer") %>%
addCircleMarkers(lng = ~Long, lat = ~Lat, weight = 1,
radius = ~(n * 1000), popup = ~n)
m <- leaflet(cf_plot) %>%
addTiles() %>%
addEsriTiledMapLayer(
url = "http://gis-treecover.wri.org/arcgis/rest/services/ForestLoss_2000_2012_map/MapServer") %>%
addCircleMarkers(lng = ~Long, lat = ~Lat, weight = 1,
radius = ~(n * 1000), popup = ~n)
m
url = "http://gis-treecover.wri.org/arcgis/rest/services/ForestLoss_2000_2012_map/MapServer") %>%
addCircleMarkers(lng = ~Long, lat = ~Lat, weight = 1,
radius = ~(n * 100), popup = ~n)
m <- leaflet(cf_plot) %>%
addTiles() %>%
addEsriTiledMapLayer(
url = "http://gis-treecover.wri.org/arcgis/rest/services/ForestLoss_2000_2012_map/MapServer") %>%
addCircleMarkers(lng = ~Long, lat = ~Lat, weight = 1,
radius = ~(n * 100), popup = ~n)
m
m <- leaflet(cf_plot) %>%
addTiles() %>%
addEsriTiledMapLayer(
url = "http://gis-treecover.wri.org/arcgis/rest/services/ForestLoss_2000_2012_map/MapServer") %>%
addCircleMarkers(lng = ~Long, lat = ~Lat, weight = 1,
radius = ~n, popup = ~n)
m
m <- leaflet(cf_plot) %>%
addTiles() %>%
addEsriTiledMapLayer(
url = "http://gis-treecover.wri.org/arcgis/rest/services/ForestLoss_2000_2012_map/MapServer") %>%
addCircleMarkers(
radius = ~n,
color = black,
stroke = TRUE, fillOpacity = 0.5
)
url = "http://gis-treecover.wri.org/arcgis/rest/services/ForestLoss_2000_2012_map/MapServer") %>%
addCircleMarkers(
m <- leaflet(cf_plot) %>%
addTiles() %>%
addEsriTiledMapLayer(
url = "http://gis-treecover.wri.org/arcgis/rest/services/ForestLoss_2000_2012_map/MapServer") %>%
addCircleMarkers(
radius = ~n,
color = "black",
stroke = TRUE, fillOpacity = 0.5
)
)
m <- leaflet(cf_plot) %>%
addTiles() %>%
addEsriTiledMapLayer(
url = "http://gis-treecover.wri.org/arcgis/rest/services/ForestLoss_2000_2012_map/MapServer") %>%
addCircleMarkers(
radius = ~n,
stroke = TRUE, fillOpacity = 0.5
)
M
m
url = "http://gis-treecover.wri.org/arcgis/rest/services/ForestLoss_2000_2012_map/MapServer") %>%
addCircleMarkers(
m <- leaflet(cf_plot) %>%
addTiles() %>%
addEsriTiledMapLayer(
url = "http://gis-treecover.wri.org/arcgis/rest/services/ForestLoss_2000_2012_map/MapServer") %>%
addCircleMarkers(
radius = ~n,
fillColor = "black",
stroke = FALSE, fillOpacity = 0.75
)
)
m
m <- leaflet(cf_plot) %>%
addTiles() %>%
addEsriTiledMapLayer(
url = "http://gis-treecover.wri.org/arcgis/rest/services/ForestLoss_2000_2012_map/MapServer") %>%
addCircleMarkers(
radius = ~(n*1.25),
fillColor = "black",
stroke = FALSE, fillOpacity = 0.75
)
m
m <- leaflet(cf_plot) %>%
addTiles() %>%
setView(lng = 0, lat = 0, zoom = 12) %>%
addEsriTiledMapLayer(
url = "http://gis-treecover.wri.org/arcgis/rest/services/ForestLoss_2000_2012_map/MapServer") %>%
addCircleMarkers(
radius = ~(n*1.25),
fillColor = "black",
stroke = FALSE, fillOpacity = 0.75
)
m
m <- leaflet(cf_plot) %>%
addTiles() %>%
setView(lng = 0, lat = 0, zoom = 1) %>%
addEsriTiledMapLayer(
url = "http://gis-treecover.wri.org/arcgis/rest/services/ForestLoss_2000_2012_map/MapServer") %>%
addCircleMarkers(
radius = ~(n*1.25),
fillColor = "black",
stroke = FALSE, fillOpacity = 0.75
)
m
m <- leaflet(cf_plot) %>%
addTiles() %>%
setView(lng = 0, lat = 0, zoom = 0) %>%
addEsriTiledMapLayer(
url = "http://gis-treecover.wri.org/arcgis/rest/services/ForestLoss_2000_2012_map/MapServer") %>%
addCircleMarkers(
radius = ~(n*1.25),
fillColor = "black",
stroke = FALSE, fillOpacity = 0.75
)
m
install.packages("mapview")
library(mapview)
mapshot(m, file="FigureX_countrycounts_forestcover.png")
webshot::install_phantomjs()
mapshot(m, file="FigureX_countrycounts_forestcover.png")
m
setwd("~/Documents/github/forest_gov_pov/")
library(dplyr)
library(tidyr)
library(ggplot2)
library(reshape)
library(geojsonio)
library(maps)
data <- read.csv("SR_FinalDataset_190415_pr_updated.csv",header=TRUE,stringsAsFactors = FALSE)
##Assign bundle type
bundle <- data %>% select(case_id,Access,Withdrawal,Management,Exclusion,Alienation) %>% distinct()
bundle$type <- c("")
row <- c(1:nrow(bundle))
for(i in row){
if(bundle$Access[i] == -1 & bundle$Withdrawal[i] == -1){
bundle$type[i] <- c("Access and withdrawal restricted")
} else if (bundle$Access[i] == 1 & bundle$Withdrawal[i] == -1){
bundle$type[i] <- c("Access but with restricted withdrawal")
} else if (bundle$Access[i] == 1 & bundle$Withdrawal[i] == 1 & bundle$Management[i] == 0 & bundle$Exclusion[i] == 0 & bundle$Alienation[i] == 0){
bundle$type[i] <- c("Access+Withdrawal")
} else if (bundle$Access[i] == 1 & bundle$Withdrawal[i] == 1 & bundle$Management[i] == 1 & bundle$Exclusion[i] == 0 & bundle$Alienation[i] == 0){
bundle$type[i] <- c("Access+Withdrawal+Management")
} else if (bundle$Access[i] == 1 & bundle$Withdrawal[i] == 1 & bundle$Management[i] == 1 & bundle$Exclusion[i] == 1 & bundle$Alienation[i] == 0){
bundle$type[i] <- c("Access+Withdrawal+Management+Exclusion")
} else if (bundle$Access[i] == 1 & bundle$Withdrawal[i] == 1 & bundle$Management[i] == 1 & bundle$Exclusion[i] == 1 & bundle$Alienation[i] == 1) {
bundle$type[i] <- c("Full bundle")
} else
bundle$type[i] <- c("None")
}
##Create dataframe for plotting
bundle_type <- bundle %>% select(case_id,type) %>% distinct()
df3 <- full_join(df2,bundle_type,by="case_id")
plot1 <- count(df3,variable,value,type) %>% complete(variable,value,type)
plot2 <- count(df3,value,type,Funder) %>% complete(value,type,Funder)
pdf("FigureX_Poverty_x_Direction_x_Bundle_042619.pdf",height=8.5,width=11)
sub <- data %>% select(case_id,OutcomeDirection_income,OutcomeDirection_assets) %>% distinct()
colnames(sub) <- c("case_id","Income","Capital/Assets")
sub2 <- melt(sub,id="case_id")
sub2 <- sub2 %>% filter(!is.na(value))
df <- count(sub2, variable, value)
##Figure 7a - individual heat maps by funder type
fund <- data %>% select(case_id,International.funded..0.1.,Domestic.funded..0.1.,Mix.funded..0.1.) %>% distinct()
colnames(fund) <- c("case_id","International","Domestic","Mix")
fund2 <- melt(fund,id="case_id") %>% filter(value != 0) %>% distinct() %>% select(-value)
colnames(fund2) <- c("case_id","Funder")
df2 <- full_join(sub2,fund2,by="case_id")
plot <- count(df2,variable,value,Funder) %>% complete(variable,value,Funder)
df3 <- full_join(df2,bundle_type,by="case_id")
plot1 <- count(df3,variable,value,type) %>% complete(variable,value,type)
plot2 <- count(df3,value,type,Funder) %>% complete(value,type,Funder)
dev.off()
pdf("FigureX_Poverty_x_Direction_x_Bundle_042619.pdf",height=8.5,width=11)
ggplot(plot1, aes(value,type)) +
geom_tile(aes(fill=n), color="white") +
geom_text(aes(label=n)) +
scale_fill_continuous(na.value="lightgray") +
scale_fill_gradient(name="Number\nof cases",low="white",high="steelblue") +
ylab("Bundle of rights") +
xlab("Direction of outcome") +
theme(legend.title=element_text(size=10),
legend.text=element_text(size=10),
axis.title=element_text(size=16)) +
facet_grid(. ~ variable)
dev.off()
pdf("FigureXa_Funder_x_Direction_x_Bundle_042619.pdf",height=8.5,width=11)
ggplot(plot2, aes(value,type)) +
geom_tile(aes(fill=n), color="white") +
geom_text(aes(label=n)) +
scale_fill_continuous(na.value="lightgray") +
scale_fill_gradient(name="Number\nof cases",low="white",high="steelblue") +
ylab("Bundle of rights") +
xlab("Direction of outcome") +
theme(legend.title=element_text(size=10),
legend.text=element_text(size=10),
axis.title=element_text(size=16)) +
facet_grid(. ~ Funder)
dev.off()
pdf("FigureX_Poverty_x_Direction_x_Bundle_042619.pdf",height=6,width=12)
ggplot(plot1, aes(value,type)) +
geom_tile(aes(fill=n), color="white") +
geom_text(aes(label=n)) +
scale_fill_continuous(na.value="lightgray") +
scale_fill_gradient(name="Number\nof cases",low="white",high="steelblue") +
ylab("Bundle of rights") +
xlab("Direction of outcome") +
theme(legend.title=element_text(size=10),
legend.text=element_text(size=10),
axis.title=element_text(size=16)) +
facet_grid(. ~ variable)
dev.off()
pdf("FigureXa_Funder_x_Direction_x_Bundle_042619.pdf",height=6,width=12)
ggplot(plot2, aes(value,type)) +
geom_tile(aes(fill=n), color="white") +
geom_text(aes(label=n)) +
scale_fill_continuous(na.value="lightgray") +
scale_fill_gradient(name="Number\nof cases",low="white",high="steelblue") +
ylab("Bundle of rights") +
xlab("Direction of outcome") +
theme(legend.title=element_text(size=10),
legend.text=element_text(size=10),
axis.title=element_text(size=16)) +
facet_grid(. ~ Funder)
dev.off()
pdf("FigureXa_Funder_x_Direction_x_Bundle_042619.pdf",height=4.5,width=12)
ggplot(plot2, aes(value,type)) +
geom_tile(aes(fill=n), color="white") +
geom_text(aes(label=n)) +
scale_fill_continuous(na.value="lightgray") +
scale_fill_gradient(name="Number\nof cases",low="white",high="steelblue") +
ylab("Bundle of rights") +
xlab("Direction of outcome") +
theme(legend.title=element_text(size=10),
legend.text=element_text(size=10),
axis.title=element_text(size=16)) +
facet_grid(. ~ Funder)
dev.off()
pdf("FigureX_Poverty_x_Direction_x_Bundle_042619.pdf",height=4.5,width=12)
ggplot(plot1, aes(value,type)) +
geom_tile(aes(fill=n), color="white") +
geom_text(aes(label=n)) +
scale_fill_continuous(na.value="lightgray") +
scale_fill_gradient(name="Number\nof cases",low="white",high="steelblue") +
ylab("Bundle of rights") +
xlab("Direction of outcome") +
theme(legend.title=element_text(size=10),
legend.text=element_text(size=10),
axis.title=element_text(size=16)) +
facet_grid(. ~ variable)
dev.off()
setwd("~/Documents/github/forest_gov_pov/")
library(dplyr)
library(tidyr)
library(ggplot2)
library(reshape)
library(geojsonio)
library(maps)
data <- read.csv("SR_FinalDataset_190415_pr_updated2.csv",header=TRUE,stringsAsFactors = FALSE)
sub <- data %>% select(case_id,OutcomeDirection_income,OutcomeDirection_assets) %>% distinct()
colnames(sub) <- c("case_id","Income","Capital/Assets")
sub2 <- melt(sub,id="case_id")
sub2 <- sub2 %>% filter(!is.na(value))
df <- count(sub2, variable, value)
##Figure 7a - individual heat maps by funder type
fund <- data %>% select(case_id,International.funded..0.1.,Domestic.funded..0.1.,Mix.funded..0.1.) %>% distinct()
colnames(fund) <- c("case_id","International","Domestic","Mix")
fund2 <- melt(fund,id="case_id") %>% filter(value != 0) %>% distinct() %>% select(-value)
colnames(fund2) <- c("case_id","Funder")
df2 <- full_join(sub2,fund2,by="case_id")
View(df2)
colnames(data)
View(data)
setwd("~/Documents/github/forest_gov_pov/")
library(dplyr)
library(tidyr)
library(ggplot2)
library(reshape)
library(geojsonio)
library(maps)
data <- read.csv("SR_FinalDataset_190415_pr_updated2.csv",header=TRUE,stringsAsFactors = FALSE)
sub <- data %>% select(case_id,OutcomeDirection_income,OutcomeDirection_assets) %>% distinct()
colnames(sub) <- c("case_id","Income","Capital/Assets")
sub2 <- melt(sub,id="case_id")
sub2 <- sub2 %>% filter(!is.na(value))
df <- count(sub2, variable, value)
##Figure 7a - individual heat maps by funder type
fund <- data %>% select(case_id,International.funded..0.1.,Domestic.funded..0.1.,Mix.funded..0.1.) %>% distinct()
colnames(fund) <- c("case_id","International","Domestic","Mix")
fund2 <- melt(fund,id="case_id") %>% filter(value != 0) %>% distinct() %>% select(-value)
colnames(fund2) <- c("case_id","Funder")
df2 <- full_join(sub2,fund2,by="case_id")
plot <- count(df2,variable,value,Funder) %>% complete(variable,value,Funder)
##Assign bundle type
bundle <- data %>% select(case_id,Access,Withdrawal,Management,Exclusion,Alienation) %>% distinct()
bundle$type <- c("")
row <- c(1:nrow(bundle))
for(i in row){
if(bundle$Access[i] == -1 & bundle$Withdrawal[i] == -1){
bundle$type[i] <- c("Access and withdrawal restricted")
} else if (bundle$Access[i] == 1 & bundle$Withdrawal[i] == -1){
bundle$type[i] <- c("Access but with restricted withdrawal")
} else if (bundle$Access[i] == 1 & bundle$Withdrawal[i] == 1 & bundle$Management[i] == 0 & bundle$Exclusion[i] == 0 & bundle$Alienation[i] == 0){
bundle$type[i] <- c("Access+Withdrawal")
} else if (bundle$Access[i] == 1 & bundle$Withdrawal[i] == 1 & bundle$Management[i] == 1 & bundle$Exclusion[i] == 0 & bundle$Alienation[i] == 0){
bundle$type[i] <- c("Access+Withdrawal+Management")
} else if (bundle$Access[i] == 1 & bundle$Withdrawal[i] == 1 & bundle$Management[i] == 1 & bundle$Exclusion[i] == 1 & bundle$Alienation[i] == 0){
bundle$type[i] <- c("Access+Withdrawal+Management+Exclusion")
} else if (bundle$Access[i] == 1 & bundle$Withdrawal[i] == 1 & bundle$Management[i] == 1 & bundle$Exclusion[i] == 1 & bundle$Alienation[i] == 1) {
bundle$type[i] <- c("Full bundle")
} else
bundle$type[i] <- c("None")
}
##Create dataframe for plotting
bundle_type <- bundle %>% select(case_id,type) %>% distinct()
df3 <- full_join(df2,bundle_type,by="case_id")
View(df3)
plot3 <- count(df3,variable,type) %>% complete(variable,type)
ggplot(plot3, aes(variable,type)) +
geom_tile(aes(fill=n), color="white") +
geom_text(aes(label=n)) +
scale_fill_continuous(na.value="lightgray") +
scale_fill_gradient(name="Number\nof cases",low="white",high="steelblue") +
ylab("Bundle of rights") +
xlab("Poverty dimension") +
theme(legend.title=element_text(size=10),
legend.text=element_text(size=10),
axis.title=element_text(size=16))
pdf("FigureX_Poverty_x_Bundle_051119.pdf", height=4.5, width=12)
ggplot(plot3, aes(variable,type)) +
geom_tile(aes(fill=n), color="white") +
geom_text(aes(label=n)) +
scale_fill_continuous(na.value="lightgray") +
scale_fill_gradient(name="Number\nof cases",low="white",high="steelblue") +
ylab("Bundle of rights") +
xlab("Poverty dimension") +
theme(legend.title=element_text(size=10),
legend.text=element_text(size=10),
axis.title=element_text(size=16))
dev.off()
pdf("FigureX_Poverty_x_Bundle_051119.pdf", height=4.5, width=12)
ggplot(plot3, aes(variable,type)) +
geom_tile(aes(fill=n), color="white") +
geom_text(aes(label=n)) +
scale_fill_continuous(na.value="lightgray") +
scale_fill_gradient(name="Number\nof cases",low="white",high="steelblue") +
ylab("Property rights affected") +
xlab("Poverty dimension") +
theme(legend.title=element_text(size=10),
legend.text=element_text(size=10),
axis.title=element_text(size=16))
dev.off()
setwd("~/Documents/github/forest_gov_pov/")
library(dplyr)
library(tidyr)
library(ggplot2)
library(reshape)
library(geojsonio)
library(maps)
data <- read.csv("SR_FinalDataset_190415_pr_updated2.csv",header=TRUE,stringsAsFactors = FALSE)
##Assign bundle type
bundle <- data %>% select(case_id,Access,Withdrawal,Management,Exclusion,Alienation) %>% distinct()
bundle$type <- c("")
View(bundle)
View(bundle)
row <- c(1:nrow(bundle))
for(i in row){
if(bundle$Access[i] == -1 & bundle$Withdrawal[i] == -1 & bundle$Management[i] == 0 & bundle$Exclusion[i] == 0 & bundle$Alienation[i] == 0){
bundle$type[i] <- c("Access and withdrawal restricted")
} else if (bundle$Access[i] == 1 & bundle$Withdrawal[i] == -1 & bundle$Management[i] == 0 & bundle$Exclusion[i] == 0 & bundle$Alienation[i] == 0){
bundle$type[i] <- c("Access but with restricted withdrawal")
} else if (bundle$Access[i] == 1 & bundle$Withdrawal[i] == 1 & bundle$Management[i] == 0 & bundle$Exclusion[i] == 0 & bundle$Alienation[i] == 0){
bundle$type[i] <- c("Access+Withdrawal")
} else if (bundle$Access[i] == 1 & bundle$Withdrawal[i] == 1 & bundle$Management[i] == 1 & bundle$Exclusion[i] == 0 & bundle$Alienation[i] == 0){
bundle$type[i] <- c("Access+Withdrawal+Management")
} else if (bundle$Access[i] == 1 & bundle$Withdrawal[i] == 1 & bundle$Management[i] == 1 & bundle$Exclusion[i] == 1 & bundle$Alienation[i] == 0){
bundle$type[i] <- c("Access+Withdrawal+Management+Exclusion")
} else if (bundle$Access[i] == 1 & bundle$Withdrawal[i] == 1 & bundle$Management[i] == 1 & bundle$Exclusion[i] == 1 & bundle$Alienation[i] == 1) {
bundle$type[i] <- c("Full bundle")
} else
bundle$type[i] <- c("None")
}
View(bundle)
##Create dataframe for plotting
bundle_type <- bundle %>% select(case_id,type) %>% distinct()
df3 <- full_join(df2,bundle_type,by="case_id")
##Figure 7a - individual heat maps by funder type
fund <- data %>% select(case_id,International.funded..0.1.,Domestic.funded..0.1.,Mix.funded..0.1.) %>% distinct()
colnames(fund) <- c("case_id","International","Domestic","Mix")
fund2 <- melt(fund,id="case_id") %>% filter(value != 0) %>% distinct() %>% select(-value)
colnames(fund2) <- c("case_id","Funder")
df2 <- full_join(sub2,fund2,by="case_id")
sub <- data %>% select(case_id,OutcomeDirection_income,OutcomeDirection_assets) %>% distinct()
colnames(sub) <- c("case_id","Income","Capital/Assets")
sub2 <- melt(sub,id="case_id")
sub2 <- sub2 %>% filter(!is.na(value))
df <- count(sub2, variable, value)
##Figure 7a - individual heat maps by funder type
fund <- data %>% select(case_id,International.funded..0.1.,Domestic.funded..0.1.,Mix.funded..0.1.) %>% distinct()
colnames(fund) <- c("case_id","International","Domestic","Mix")
fund2 <- melt(fund,id="case_id") %>% filter(value != 0) %>% distinct() %>% select(-value)
colnames(fund2) <- c("case_id","Funder")
df2 <- full_join(sub2,fund2,by="case_id")
plot <- count(df2,variable,value,Funder) %>% complete(variable,value,Funder)
##Create dataframe for plotting
bundle_type <- bundle %>% select(case_id,type) %>% distinct()
df3 <- full_join(df2,bundle_type,by="case_id")
plot1 <- count(df3,variable,value,type) %>% complete(variable,value,type)
plot2 <- count(df3,value,type,Funder) %>% complete(value,type,Funder)
plot3 <- count(df3,variable,type) %>% complete(variable,type)
pdf("FigureX_Poverty_x_Bundle_060319.pdf", height=4.5, width=12)
ggplot(plot3, aes(variable,type)) +
geom_tile(aes(fill=n), color="white") +
geom_text(aes(label=n)) +
scale_fill_continuous(na.value="lightgray") +
scale_fill_gradient(name="Number\nof cases",low="white",high="steelblue") +
ylab("Property rights affected") +
xlab("Poverty dimension") +
theme(legend.title=element_text(size=10),
legend.text=element_text(size=10),
axis.title=element_text(size=16))
dev.off()
